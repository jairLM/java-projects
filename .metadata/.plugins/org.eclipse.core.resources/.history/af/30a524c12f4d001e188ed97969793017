package org.myProyect;

import java.util.Scanner;

public class Opciones {
	static Scanner sc = new Scanner(System.in);
	static double saldo = 10_000;
	static double donacion;
	static double cantMaxima;

	static void opcion1() {

		int opcion;
		boolean salir = false;
		do {
			System.out.println("1) Ver saldo actual");
			System.out.println("2) Retirar");
			System.out.println("3) Regresar al menú principal");

			opcion = sc.nextInt();
			sc.nextLine();

			switch (opcion) {
			case 1:
				System.out.println("Saldo actual: $" + saldo);
				break;

			case 2:

				boolean salirOpcion1 = false;
				do {

					try {
						System.out.println(
								"\033[33mIngresa el monto a retirar (solo se aceptan cantidades mútiplos de 50)");
						double cantidadRetiro = sc.nextInt();
						if (cantidadRetiro > cantMaxima) {
							System.out.println("\033[31mMaximo a retirar: $" + cantMaxima + ", intenta de nuevo");
						} else {
							System.out.println("¿Desea donar $200 para la graduación de la CH30?(1 = s / 2 = n)");
							int respDonar = sc.nextInt();

							if (respDonar == 1) {
								donacion = 200;
								Retiro nuevoRetiro = new Retiro(cantidadRetiro);
								Historial.añadirRetiro(nuevoRetiro);
								saldo = Retiro.retiro(saldo, cantidadRetiro, donacion);
								salirOpcion1 = true;
							} else {
								donacion = 0;
								Retiro nuevoRetiro = new Retiro(cantidadRetiro);
								Historial.añadirRetiro(nuevoRetiro);
								saldo = Retiro.retiro(saldo, cantidadRetiro, donacion);
								salirOpcion1 = true;
							}
						}

					} catch (Exception e) {
						e.printStackTrace();
						System.out.println("\033[31mIngresa datos validos");
						sc.nextLine();
					}

				} while (!salirOpcion1);

				System.out.println(saldo);

				break;
			case 3:
				salir = true;
				break;

			default:
				break;
			}

		} while (!salir);

	}

	
	/*
	 * Colores Negro: \033[30m Rojo: \033[31m Verde: \033[32m Amarillo: \033[33m
	 * Azul: \033[34m Magenta: \033[35m Blanco: \033[37m Cyan: \033[36m Reset:
	 * \u001B[0m
	 */

	static void opcion2() {
	boolean opcion2 = false;
	do {
		
		try {

			System.out.println("\033[33m1) Cuenta a cheques");
			System.out.println("2) Deposito a tarjeta de crédito");
			System.out.println("3) Regresar al menú");
			int opcion = sc.nextInt();
			switch (opcion) {
			
			case 1:
				System.out.println("Ingresa la cantidad a depositar en tu cuenta cheques: ");
				int depositoCheque = sc.nextInt();
				saldo = Deposito.depositoCheques(saldo, depositoCheque);
				System.err.println("\033[32mDeposito exitoso");
				System.out.println("Saldo: "+ saldo);
				break;
				
			case 2:
				System.out.println("Ingrese el numero de cuenta (5 dígitos)");
				int numCuenta = sc.nextInt();
				System.out.println("Ingrese monto");
				int monto = sc.nextInt();
				
				if(monto > saldo) throw new IllegalStateException("\033[31mHas superado el saldo disponible");
				else if(monto < 0) throw new IllegalStateException("\033[31mNo se aceptan numero negativos");
				else {
					Deposito nuevoDeposito = new Deposito(numCuenta, monto);
					Historial.añadirDeposito(nuevoDeposito);				
					saldo = Deposito.deposito(saldo, monto);
				}
				break;
			case 3:
				
				opcion2 = true;
				break;

			default:
				break;
			}

		} catch (Exception e) {
			System.out.println("\033[31mIngresa datos validos");
			sc.nextLine();
		}
		
	} while (!opcion2);
		
	}

}
